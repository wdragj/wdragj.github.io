[{"authors":null,"categories":null,"content":"Hello! My name is Freddy Seo and I am currently a second-year Computer Science student at the University of Wisconsin-Madison, intending a focus on Software Development.\nI am an energetic and passionate college student aiming to use the knowledge and skills that I have acquired from coursework, projects, previous internship, and self study to become an experienced software developer.\nOther than that, I really like coffee…\nDownload my resumé.\n","date":1372636800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1372636800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Hello! My name is Freddy Seo and I am currently a second-year Computer Science student at the University of Wisconsin-Madison, intending a focus on Software Development.\nI am an energetic and passionate college student aiming to use the knowledge and skills that I have acquired from coursework, projects, previous internship, and self study to become an experienced software developer.","tags":null,"title":"Freddy Seo","type":"authors"},{"authors":null,"categories":null,"content":" Table of Contents What you will learn Program overview Courses in this program Meet your instructor FAQs What you will learn Fundamental Python programming skills Statistical concepts and how to apply them in practice Gain experience with the Scikit, including data visualization with Plotly and data wrangling with Pandas Program overview The demand for skilled data science practitioners is rapidly growing. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi.\nCourses in this program Python basics Build a foundation in Python. Visualization Learn how to visualize data with Plotly. Statistics Introduction to statistics for data science. Meet your instructor Freddy Seo FAQs Are there prerequisites? There are no prerequisites for the first course.\nHow often do the courses run? Continuously, at your own pace.\nBegin the course ","date":1611446400,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1611446400,"objectID":"b5909da7f890c05a719513b91698688b","permalink":"https://wdragj.github.io/study/algorithms/","publishdate":"2021-01-24T00:00:00Z","relpermalink":"/study/algorithms/","section":"study","summary":"Organized study material on algorithms.","tags":["Algorithms"],"title":"Algorithms","type":"book"},{"authors":null,"categories":null,"content":" Table of Contents About java Java Terminology Courses in this program About java Primary/Main Features of Java\nPlatform Independent: Compiler converts source code to bytecode and then the JVM executes the bytecode generated by the compiler This bytecode can run on any platform be it Windows, Linux, or macOS which means if we compile a program on Windows, then we can run it on Linux and vice versa Each operating system has a different JVM, but the output produced by all the OS is the same after the execution of bytecode That is why we call java a platform-independent language Object-Oriented Programming Language: Organizing the program in the terms of collection of objects is a way of object-oriented programming, each of which represents an instance of the class The four main concepts of Object-Oriented programming are: Abstraction Encapsulation Inheritance Polymorphism Simple: Java is one of the simple languages as it does not have complex features like pointers, operator overloading, multiple inheritances, and Explicit memory allocation Robust: Java language is robust which means reliable It is developed in such a way that it puts a lot of effort into checking errors as early as possible, that is why the java compiler is able to detect even those errors that are not easy to detect by another programming language The main features of java that make it robust are garbage collection, Exception Handling, and memory allocation Secure: In java, we don’t have pointers, so we cannot access out-of-bound arrays i.e it shows ArrayIndexOutOfBound Exception if we try to do so That’s why several security flaws like stack corruption or buffer overflow are impossible to exploit in Java Also java programs run in an environment that is independent of the os(operating system) environment which makes java programs more secure Distributed: We can create distributed applications using the java programming language Remote Method Invocation and Enterprise Java Beans are used for creating distributed applications in java The java programs can be easily distributed on one or more systems that are connected to each other through an internet connection Multithreading: Java supports multithreading It is a Java feature that allows concurrent execution of two or more parts of a program for maximum utilization of the CPU Portable: Java code written on one machine can be run on another machine The platform-independent feature of java in which its platform-independent bytecode can be taken to any platform for execution makes java portable High Performance: Java architecture is defined in such a way that it reduces overhead during the runtime At some time java uses Just In Time (JIT) compiler where the compiler compiles code on-demand basics where it only compiles those methods that are called making applications to execute faster Dynamic flexibility: Java being completely object-oriented gives us the flexibility to add classes, new methods to existing classes and even create new classes through sub-classes Java even supports functions written in other languages such as C, C++ which are referred to as native methods Sandbox Execution: Java programs run in a separate space that allows user to execute their applications without affecting the underlying system with help of a bytecode verifier Bytecode verifier also provides additional security as its role is to check the code for any violation of access Write Once Run Anywhere: As discussed above java application generates a ‘.class’ file which corresponds to our applications(program) but contains code in binary format It provides architecture-neutral ease as bytecode is not dependent on any machine architecture It is the primary reason java is used in the enterprising IT industry globally worldwide Power of compilation and interpretation: Most languages are designed with purpose either they are compiled language or they are interpreted language Java integrates arising enormous power as Java compiler compiles the source code to bytecode and JVM executes this bytecode to machine OS-dependent executable code Java Terminology Below are some common terms of Java.\nJava Virtual Machine(JVM): This is generally referred to as JVM There are three execution phases of a program They are written, compile and run the program Writing a program is done by a java programmer The compilation is done by the JAVAC compiler which is a primary Java compiler included in the Java development kit (JDK). It takes the Java program as input and generates bytecode as output In the running phase of a program, JVM executes the bytecode generated by the compiler The function of Java Virtual Machine (JVM) is to execute the bytecode produced by the compiler. Every Operating System has a different JVM but the output they produce after the execution of bytecode is the same across all the operating systems. This is why Java is known as a platform-independent language.\nBytecode in the Development process: The Javac compiler of …","date":1611446400,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1611446400,"objectID":"897098c57fb49719d81ca20a97a9f60e","permalink":"https://wdragj.github.io/study/java/","publishdate":"2021-01-24T00:00:00Z","relpermalink":"/study/java/","section":"study","summary":"Organized study material on Java programming language.","tags":["Java"],"title":"Java","type":"book"},{"authors":null,"categories":null,"content":"A brief information on the Classes and Objects, Method, Instance variables, syntax, and semantics of Java.\n1-2 hours per week, for 8 weeks\nLearn Quiz What is the difference between lists and tuples? Lists\nLists are mutable - they can be changed Slower than tuples Syntax: a_list = [1, 2.0, \u0026#39;Hello world\u0026#39;] Tuples\nTuples are immutable - they can’t be changed Tuples are faster than lists Syntax: a_tuple = (1, 2.0, \u0026#39;Hello world\u0026#39;) Is Python case-sensitive? Yes\n","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"410fcd5c882a743ec4ade90edd69408a","permalink":"https://wdragj.github.io/study/java/java_basic_syntax/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/study/java/java_basic_syntax/","section":"study","summary":"A brief information on the Classes and Objects, Method, Instance variables, syntax, and semantics of Java.\n","tags":["Java"],"title":"Java Basic Syntax","type":"book"},{"authors":null,"categories":null,"content":"Build a foundation in Python.\n1-2 hours per week, for 8 weeks\nLearn Quiz What is the difference between lists and tuples? Lists\nLists are mutable - they can be changed Slower than tuples Syntax: a_list = [1, 2.0, \u0026#39;Hello world\u0026#39;] Tuples\nTuples are immutable - they can’t be changed Tuples are faster than lists Syntax: a_tuple = (1, 2.0, \u0026#39;Hello world\u0026#39;) Is Python case-sensitive? Yes\n","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"2e9eea5e6c4a1295f6be7e2b9b0f2a9b","permalink":"https://wdragj.github.io/study/algorithms/python/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/study/algorithms/python/","section":"study","summary":"Build a foundation in Python.\n","tags":null,"title":"Python basics","type":"book"},{"authors":null,"categories":null,"content":"JDK, JRE and JVM and the differences between them.\n1-2 hours per week, for 8 weeks\nLearn Quiz When is a heatmap useful? Lorem ipsum dolor sit amet, consectetur adipiscing elit.\nWrite Plotly code to render a bar chart import plotly.express as px data_canada = px.data.gapminder().query(\u0026#34;country == \u0026#39;Canada\u0026#39;\u0026#34;) fig = px.bar(data_canada, x=\u0026#39;year\u0026#39;, y=\u0026#39;pop\u0026#39;) fig.show() ","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"6185a6646a8731c038962cdb4caf41a0","permalink":"https://wdragj.github.io/study/java/jdk_jre_jvm/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/study/java/jdk_jre_jvm/","section":"study","summary":"JDK, JRE and JVM and the differences between them.\n","tags":["Java","JDK","JRE","JVM"],"title":"Differences between JDK, JRE and JVM","type":"book"},{"authors":null,"categories":null,"content":"Learn how to visualize data with Plotly.\n1-2 hours per week, for 8 weeks\nLearn Quiz When is a heatmap useful? Lorem ipsum dolor sit amet, consectetur adipiscing elit.\nWrite Plotly code to render a bar chart import plotly.express as px data_canada = px.data.gapminder().query(\u0026#34;country == \u0026#39;Canada\u0026#39;\u0026#34;) fig = px.bar(data_canada, x=\u0026#39;year\u0026#39;, y=\u0026#39;pop\u0026#39;) fig.show() ","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"b0b90f9321ab5fffe92c992d9e7e1c06","permalink":"https://wdragj.github.io/study/algorithms/visualization/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/study/algorithms/visualization/","section":"study","summary":"Learn how to visualize data with Plotly.\n","tags":["Data Visualization"],"title":"Visualization","type":"book"},{"authors":null,"categories":null,"content":"Introduction to statistics for data science.\n1-2 hours per week, for 8 weeks\nLearn The general form of the normal probability density function is:\n$$ f(x) = \\frac{1}{\\sigma \\sqrt{2\\pi} } e^{-\\frac{1}{2}\\left(\\frac{x-\\mu}{\\sigma}\\right)^2} $$\nThe parameter $\\mu$ is the mean or expectation of the distribution. $\\sigma$ is its standard deviation. The variance of the distribution is $\\sigma^{2}$. Quiz What is the parameter $\\mu$? The parameter $\\mu$ is the mean or expectation of the distribution.\n","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"2eb1fd8b000e4450360ea144ee5ba4a5","permalink":"https://wdragj.github.io/study/algorithms/stats/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/study/algorithms/stats/","section":"study","summary":"Introduction to statistics for data science.\n","tags":["Statistics"],"title":"Statistics","type":"book"},{"authors":null,"categories":null,"content":"Variables \u0026amp; Data types in Java.\n1-2 hours per week, for 8 weeks\nLearn The general form of the normal probability density function is:\n$$ f(x) = \\frac{1}{\\sigma \\sqrt{2\\pi} } e^{-\\frac{1}{2}\\left(\\frac{x-\\mu}{\\sigma}\\right)^2} $$\nThe parameter $\\mu$ is the mean or expectation of the distribution. $\\sigma$ is its standard deviation. The variance of the distribution is $\\sigma^{2}$. Quiz What is the parameter $\\mu$? The parameter $\\mu$ is the mean or expectation of the distribution.\n","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"8a4f3281e1763e7dcfb44329bedfd667","permalink":"https://wdragj.github.io/study/java/variables_and_datatypes/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/study/java/variables_and_datatypes/","section":"study","summary":"Variables \u0026 Data types in Java.\n","tags":["Java"],"title":"Variables \u0026 Data types","type":"book"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature. Slides can be added in a few ways:\nCreate slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://wdragj.github.io/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":null,"categories":["Docker"],"content":"Complete Docker CLI Container Management Inspecting The Container Interacting with Container Image Management Image Transfer Builder Main ","date":1665077387,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1665077387,"objectID":"907a103b71e2c87c18f942aacc9ed278","permalink":"https://wdragj.github.io/post/docker-clis/","publishdate":"2022-10-06T17:29:47.193Z","relpermalink":"/post/docker-clis/","section":"post","summary":"An organized list of docker CLIs that are useful.","tags":["Docker"],"title":"Docker - CLIs","type":"post"},{"authors":null,"categories":["Docker"],"content":"Docker Images are read-only templates comprised of multiple layers which act as a blueprint of the container environment.\nDocker Images are built by specifying instructions inside a special file called Dockerfile.\nDockerfile allows us to define instructions to create a customized container environment.\nWe can execute the Docker build command on a Dockerfile to create a Docker Image.\nThis Docker image can then be used to create one or more instances of Docker containers associated with that image.\nRunning Containers from Docker Image Steps to create a Docker Image and run a Container\nStep 1:\nCreate a Dockerfile. Step 2:\nRun the following command in the terminal and it will create a docker image of the application and download all the necessary dependencies needed for the application to run successfully. docker build -t \u0026lt;tag to give to your image\u0026gt; This will start building the image. Step 3:\nWe have successfully created a Dockerfile and a respective Docker image for the same. Step 4:\nRun the following command in the terminal and it will create a running container with all the needed dependencies and start the application. docker run -p 9000:80 \u0026lt;tag-name\u0026gt; The 9000 is the port we want to access our application on. 80 is the port the container is exposing for the host to access. Useful Docker Image commands: docker images See the list of Docker images on the system\ndocker build -t \u0026lt;tag name\u0026gt; . Build the container image\ndocker run -dp 3000:3000 \u0026lt;tag name\u0026gt; Start the app container using the image\ndocker rmi \u0026lt;Image ID\u0026gt; Removing Docker Images\ndocker images -q Return the Image ID’s only\ndocker inspect \u0026lt;name\u0026gt; Used to see the details fo an image or container\n","date":1665075873,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1665075873,"objectID":"7558c0cb542742d47806e0efe31d5083","permalink":"https://wdragj.github.io/post/docker-images/","publishdate":"2022-10-06T17:04:33.407Z","relpermalink":"/post/docker-images/","section":"post","summary":"Docker Images are read-only templates comprised of multiple layers which act as a blueprint of the container environment.","tags":["Docker"],"title":"Docker - Images","type":"post"},{"authors":[],"categories":["Docker"],"content":"W﻿hat is Docker? Docker is an open platform for developing, shipping, and running applications. Docker enables you to separate your applications from your infrastructure so you can deliver software quickly. With Docker, you can manage your infrastructure in the same ways you manage your applications. By taking advantage of Docker’s methodologies for shipping, testing, and deploying code quickly, you can significantly reduce the delay between writing code and running it in production.\nWhat are the benefits of Docker? The key benefit of Docker is that it allows users to package an application with all of its dependencies into a standardized unit for software development Unlike virtual machines, containers do not have high overhead and hence enable more efficient usage of the underlying system and resources Terminology Dockerfile\nIs a simple text file with instructions to build a Docker image. Images\nThe blueprints of our application which form the basis of containers. An image is a combination of a file system and parameters. Containers\nCreated from Docker images and run the actual application. Containers are instances of Docker images that can be run using the Docker run command. The basic purpose of Docker is to run containers. Docker Daemon\nThe background service running on the host that manages building, running and distributing Docker containers The daemon is the process that runs in the operating system which clients talk to. Docker Client\nThe command line tool that allows the user to interact with the daemon. More generally, there can be other forms of clients too - such as Kitematic which provide a GUI to the users. The command line tool that allows the user to interact with the daemon More generally, there can be other forms of clients too - such as Kitematic which provide a GUI to the users. Docker Hub\nA registry of Docker images. You can think of the registry as a directory of all available Docker images. If required, one can host their own Docker registries and can use them for pulling images. Docker architecture Docker uses a client-server architecture. The Docker client talks to the Docker daemon, which does the heavy lifting of building, running, and distributing your Docker containers. The Docker client and daemon can run on the same system, or you can connect a Docker client to a remote Docker daemon. The Docker client and daemon communicate using a REST API, over UNIX sockets or a network interface. Another Docker client is Docker Compose, that lets you work with applications consisting of a set of containers.\nThe Docker daemon The Docker daemon (dockerd) listens for Docker API requests and manages Docker objects such as images, containers, networks, and volumes. A daemon can also communicate with other daemons to manage Docker services.\nThe Docker client The Docker client (docker) is the primary way that many Docker users interact with Docker. When you use commands such as docker run, the client sends these commands to dockerd, which carries them out. The docker command uses the Docker API. The Docker client can communicate with more than one daemon.\nDocker Desktop Docker Desktop is an easy-to-install application for your Mac, Windows or Linux environment that enables you to build and share containerized applications and microservices. Docker Desktop includes the Docker daemon (dockerd), the Docker client (docker), Docker Compose, Docker Content Trust, Kubernetes, and Credential Helper. For more information, see Docker Desktop.\nDocker registries A Docker registry stores Docker images. Docker Hub is a public registry that anyone can use, and Docker is configured to look for images on Docker Hub by default. You can even run your own private registry.\nWhen you use the docker pull or docker run commands, the required images are pulled from your configured registry. When you use the docker push command, your image is pushed to your configured registry.\nDocker objects When you use Docker, you are creating and using images, containers, networks, volumes, plugins, and other objects. This section is a brief overview of some of those objects.\nImages An image is a read-only template with instructions for creating a Docker container. Often, an image is based on another image, with some additional customization. For example, you may build an image which is based on the ubuntu image, but installs the Apache web server and your application, as well as the configuration details needed to make your application run.\nYou might create your own images or you might only use those created by others and published in a registry. To build your own image, you create a Dockerfile with a simple syntax for defining the steps needed to create the image and run it. Each instruction in a Dockerfile creates a layer in the image. When you change the Dockerfile and rebuild the image, only those layers which have changed are rebuilt. This is part of what makes images so lightweight, small, and fast, when compared to other …","date":1664976439,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607817600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://wdragj.github.io/post/getting-started/","publishdate":"2022-10-05T13:27:19.172Z","relpermalink":"/post/getting-started/","section":"post","summary":"Docker is a tool that allows developers, sys-admins etc. to easily deploy their applications in a sandbox (called containers) to run on the host operating system i.e. Linux.","tags":["Docker"],"title":"Docker and its basic concepts","type":"post"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"https://wdragj.github.io/project/example/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/example/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Example Project","type":"project"},{"authors":["Freddy Seo","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"ff6a19061a984819d30c916886db56ef","permalink":"https://wdragj.github.io/publication/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/example/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]